EBuild {name = "hakyll", category = "dev-haskell", hackage_name = "hakyll", version = "4.16.1.0", revision = "0", hackportVersion = "0.8.5.0", sourceURIs = ["git://github.com/jaspervdj/hakyll.git"], description = "A static website compiler library", homepage = "http://jaspervdj.be/hakyll", license = Right "BSD", slot = "0/${PV}", keywords = ["~amd64"], iuse = ["+previewserver","+watchserver","+checkexternal","buildwebsite","+usepandoc"], depend = DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]))))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]))))) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])])))) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])])))) (DependAllOf [])) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]))) (DependAllOf []))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]))) (DependAllOf []))) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]))) (DependAllOf [])) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]))) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])])) (DependAllOf [])))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])])) (DependAllOf [])))) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])])) (DependAllOf []))) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])])) (DependAllOf []))) (DependAllOf [])) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])])) (DependAllOf [])) (DependAllOf []))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])])) (DependAllOf [])) (DependAllOf []))) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])])) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])])) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf []))))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf []))))) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf [])))) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf [])))) (DependAllOf [])) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf []))) (DependAllOf []))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf []))) (DependAllOf []))) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf []))) (DependAllOf [])) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf []))) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf [])) (DependAllOf [])))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf [])) (DependAllOf [])))) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf [])) (DependAllOf []))) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf [])) (DependAllOf []))) (DependAllOf [])) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf [])) (DependAllOf [])) (DependAllOf []))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf [])) (DependAllOf [])) (DependAllOf []))) (DependAllOf [])],DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "cabal"}) (DRange (NonstrictLB (Version {versionNumber = [3,4,1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [],DependAllOf [DependAllOf []],DependIfUse (Use "test") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [2,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-golden"}) (DRange (NonstrictLB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-hunit"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tasty-quickcheck"}) (DRange (NonstrictLB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot []))]) (DependAllOf [])]) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])]]]]]]]]]]]]]]]], depend_extra = ["${RDEPEND}"], rdepend = DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]))))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]))))) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []])))) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []])))) (DependAllOf [])) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]))) (DependAllOf []))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]))) (DependAllOf []))) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]))) (DependAllOf [])) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]))) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []])) (DependAllOf [])))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []])) (DependAllOf [])))) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []])) (DependAllOf []))) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []])) (DependAllOf []))) (DependAllOf [])) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []])) (DependAllOf [])) (DependAllOf []))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []])) (DependAllOf [])) (DependAllOf []))) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []])) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf []) (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []])) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf []))))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf []))))) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf [])))) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf [])))) (DependAllOf [])) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf []))) (DependAllOf []))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf []))) (DependAllOf []))) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf []))) (DependAllOf [])) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependAllOf []) (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf []))) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf [])) (DependAllOf [])))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf [])) (DependAllOf [])))) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf [])) (DependAllOf []))) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependAllOf []) (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf [])) (DependAllOf []))) (DependAllOf [])) (DependAllOf [])],DependAllOf [DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf [])) (DependAllOf [])) (DependAllOf []))),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependAllOf []) (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf [])) (DependAllOf [])) (DependAllOf []))) (DependAllOf [])],DependAllOf [DependIfUse (Use "previewserver") (DependAllOf []) (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])),DependIfUse (Use "previewserver") (DependIfUse (Use "watchserver") (DependIfUse (Use "checkexternal") (DependIfUse (Use "buildwebsite") (DependIfUse (Use "usepandoc") (DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-lang"}, cabalPkgName = PackageName "ghc"}) (DRange (NonstrictLB (Version {versionNumber = [9,0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) InfinityB) (DAttr AnySlot [])),DependAllOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-html"}) (DRange (NonstrictLB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,10], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "blaze-markup"}) (DRange (NonstrictLB (Version {versionNumber = [0,5,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "data-default"}) (DRange (NonstrictLB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,8], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "file-embed"}) (DRange (NonstrictLB (Version {versionNumber = [0,0,10,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,0,16], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "fsnotify"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,5], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "hashable"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-conduit"}) (DRange (NonstrictLB (Version {versionNumber = [2,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "http-types"}) (DRange (NonstrictLB (Version {versionNumber = [0,9], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,13], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "lrucache"}) (DRange (NonstrictLB (Version {versionNumber = [1,1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "network-uri"}) (DRange (NonstrictLB (Version {versionNumber = [2,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,7], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "optparse-applicative"}) (DRange (NonstrictLB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,19], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "parsec"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "random"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "regex-tdfa"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "resourcet"}) (DRange (NonstrictLB (Version {versionNumber = [1,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "scientific"}) (DRange (NonstrictLB (Version {versionNumber = [0,3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "tagsoup"}) (DRange (NonstrictLB (Version {versionNumber = [0,13,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,15], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "time-locale-compat"}) (DRange (NonstrictLB (Version {versionNumber = [0,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "unordered-containers"}) (DRange (NonstrictLB (Version {versionNumber = [0,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "vector"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,14], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "wai-app-static"}) (DRange (NonstrictLB (Version {versionNumber = [3,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "warp"}) (DRange (NonstrictLB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,4], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "yaml"}) (DRange (NonstrictLB (Version {versionNumber = [0,8,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [0,12], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [1,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,6], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "aeson"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [2,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,20], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "pandoc"}) (DRange (NonstrictLB (Version {versionNumber = [3,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [3,2], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))],DependAnyOf [DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [0,11], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [1,3], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))])),DependAtom (Atom (PackageName {category = Category {unCategory = "dev-haskell"}, cabalPkgName = PackageName "text"}) (DRange (NonstrictLB (Version {versionNumber = [2,0], versionChar = Nothing, versionSuffix = [], versionRevision = 0})) (StrictUB (Version {versionNumber = [2,1], versionChar = Nothing, versionSuffix = [], versionRevision = 0}))) (DAttr AnySlot [Q (UseFlag (Use "profile"))]))]],DependAllOf [],DependAllOf []]) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])) (DependAllOf [])]]]]]]]]]]]]]]]], rdepend_extra = [], features = [Lib,Profile,Haddock,Hoogle,HsColour,TestSuite], cabal_pn = Nothing, src_prepare = [], src_configure = ["haskell-cabal_src_configure \\","\t$(cabal_flag buildwebsite buildwebsite) \\","\t$(cabal_flag checkexternal checkexternal) \\","\t$(cabal_flag previewserver previewserver) \\","\t$(cabal_flag usepandoc usepandoc) \\","\t$(cabal_flag watchserver watchserver)"], used_options = []}